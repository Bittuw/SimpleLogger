get_filename_component(PROJECT ${CMAKE_CURRENT_SOURCE_DIR} NAME)
project(${PROJECT} CXX)

set (${PROJECT_NAME}_INCLUDE 
	${CMAKE_CURRENT_SOURCE_DIR}/include/Logger.h 
	${CMAKE_CURRENT_SOURCE_DIR}/include/LoggerThread.h 
	${CMAKE_CURRENT_SOURCE_DIR}/include/Types.hpp
)

set (${PROJECT_NAME}_SOURCE 
	${CMAKE_CURRENT_SOURCE_DIR}/source/Logger.cpp	
	${CMAKE_CURRENT_SOURCE_DIR}/source/dllmain.cpp
)

message(STATUS "PATH: ${${PROJECT_NAME}_INCLUDE}")
message(STATUS "PATH: ${${PROJECT_NAME}_SOURCE}")
message(STATUS "PATH: ${CMAKE_INSTALL_PREFIX}")

#create_library(${PROJECT} SHARED ${${PROJECT_NAME}_INCLUDE} ${${PROJECT_NAME}_SOURCE})

add_library (${PROJECT} SHARED 
	${${PROJECT_NAME}_SOURCE}
	${${PROJECT_NAME}_INCLUDE}
)

target_include_directories(${PROJECT_NAME} PUBLIC ${CMAKE_CURRENT_SOURCE_DIR}/include/)

target_compile_definitions(${PROJECT_NAME} PRIVATE UNICODE _UNICODE WIN32_LEAD_AND_MEAN)

install (TARGETS ${PROJECT_NAME}
	RUNTIME DESTINATION ${CMAKE_INSTALL_PREFIX}/bin
	LIBRARY DESTINATION ${CMAKE_INSTALL_PREFIX}/bin
	ARCHIVE DESTINATION ${CMAKE_INSTALL_PREFIX}/bin
)
